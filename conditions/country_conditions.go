// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	models "github.com/ditrit/badaas-orm-tutorial/models"
	cql "github.com/ditrit/badaas/orm/cql"
	model "github.com/ditrit/badaas/orm/model"
	"time"
)

func (countryConditions countryConditions) Capital(conditions ...cql.Condition[models.City]) cql.JoinCondition[models.Country] {
	return cql.NewJoinCondition[models.Country, models.City](conditions, "Capital", "CapitalID", countryConditions.Preload(), "ID")
}
func (countryConditions countryConditions) PreloadCapital() cql.JoinCondition[models.Country] {
	return countryConditions.Capital(City.Preload())
}

type countryConditions struct {
	ID        cql.Field[models.Country, model.UUID]
	CreatedAt cql.Field[models.Country, time.Time]
	UpdatedAt cql.Field[models.Country, time.Time]
	DeletedAt cql.Field[models.Country, time.Time]
	Name      cql.StringField[models.Country]
	CapitalID cql.Field[models.Country, model.UUID]
}

var Country = countryConditions{
	CapitalID: cql.Field[models.Country, model.UUID]{Name: "CapitalID"},
	CreatedAt: cql.Field[models.Country, time.Time]{Name: "CreatedAt"},
	DeletedAt: cql.Field[models.Country, time.Time]{Name: "DeletedAt"},
	ID:        cql.Field[models.Country, model.UUID]{Name: "ID"},
	Name:      cql.StringField[models.Country]{Field: cql.Field[models.Country, string]{Name: "Name"}},
	UpdatedAt: cql.Field[models.Country, time.Time]{Name: "UpdatedAt"},
}

// Preload allows preloading the Country when doing a query
func (countryConditions countryConditions) Preload() cql.Condition[models.Country] {
	return cql.NewPreloadCondition[models.Country](countryConditions.ID, countryConditions.CreatedAt, countryConditions.UpdatedAt, countryConditions.DeletedAt, countryConditions.Name, countryConditions.CapitalID)
}

// PreloadRelations allows preloading all the Country's relation when doing a query
func (countryConditions countryConditions) PreloadRelations() []cql.Condition[models.Country] {
	return []cql.Condition[models.Country]{countryConditions.PreloadCapital()}
}
